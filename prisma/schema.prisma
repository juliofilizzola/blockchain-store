// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(uuid())
  name      String
  email     String     @unique
  phone     String
  wallet    Wallet[]
  purchase  Purchase[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  deletedAt DateTime?
}

model Wallet {
  id            String    @id @default(uuid())
  balance       Int       @default(0)
  typeToken     TypeToken
  quantityToken Int       @default(0)
  user          User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId        String
  offer         Offer[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  deletedAt     DateTime?
}

model Offer {
  id          String     @id @default(uuid())
  name        String
  price       Int
  description String
  expiration  DateTime
  quantity    Int // quantidade de token a ser vendido
  wallet      Wallet     @relation(fields: [walletId], references: [id], onDelete: Cascade)
  walletId    String
  purchase    Purchase[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  deletedAt   DateTime?
}

model Purchase {
  id            String        @id @default(uuid())
  offer         Offer         @relation(fields: [offerId], references: [id], onDelete: Cascade)
  offerId       String
  quantity      Int
  methodPayment MethodPaymant
  user          User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId        String
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  deletedAt     DateTime?
}

enum TypeToken {
  dogcoin
  litecoin
  ripple
}

enum MethodPaymant {
  pix
  creditCard
  debitCard
}